name: CI/CD Workflow

on:
  push:
    branches:
      - dev
      - main

jobs:
  dev-workflow:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Dependencies install for backend
        run: |
          cd backend
          npm install

      - name: Fix Permissions
        run: |
          cd backend
          chmod +x ./node_modules/.bin/jest

      - name: Run Backend Unit Tests
        run: |
          cd backend
          node ./node_modules/.bin/jest

      - name: Tests for backend
        run: |
          cd backend
          npm test

      - name: Dependencies install for frontend
        run: |
          cd frontend
          npm install

      - name: Tests for frontend
        run: |
          cd frontend
          npm test

      - name: Merge dev into staging
        uses: devmasx/merge-branch@v1
        with:
          type: merge
          branch: staging
          github_token: ${{ secrets.GITHUB_TOKEN }}

  main-workflow:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Dependencies install for backend
        run: |
          cd backend
          npm install

      - name: Tests for backend
        run: |
          cd backend
          npm test

      - name: Dependencies install for frontend
        run: |
          cd frontend
          npm install

      - name: Tests for frontend
        run: |
          cd frontend
          npm test

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: (Build/Push) Docker image
        run: |
          docker-compose build
          docker-compose push
